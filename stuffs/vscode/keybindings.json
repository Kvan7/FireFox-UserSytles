// Place your key bindings in this file to override the defaults
[
	{
		"key": "f8",
		"command": "code-runner.run"
	},
	{
		"key": "alt+f8",
		"command": "code-runner.stop"
	},
	{
		"key": "alt+i",
		"command": "cursorUp",
		"when": "textInputFocus"
	},
	{
		"key": "alt+j",
		"command": "cursorLeft",
		"when": "textInputFocus"
	},
	{
		"key": "alt+l",
		"command": "cursorRight",
		"when": "textInputFocus"
	},
	{
		"key": "alt+k",
		"command": "cursorDown",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+;",
		"command": "expandLineSelection",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+l",
		"command": "cursorWordRight",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+alt+j",
		"command": "cursorWordLeft",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+j",
		"command": "cursorWordLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+l",
		"command": "cursorWordRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+i",
		"command": "cursorUpSelect",
		"when": "textInputFocus"
	},
	{
		"key": "ctrl+shift+alt+k",
		"command": "cursorDownSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+j",
		"command": "cursorLeftSelect",
		"when": "textInputFocus"
	},
	{
		"key": "shift+alt+l",
		"command": "cursorRightSelect",
		"when": "textInputFocus"
	},
	{
		"key": "alt+k",
		"command": "selectNextSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "alt+i",
		"command": "selectPrevSuggestion",
		"when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus"
	},
	{
		"key": "alt+k",
		"command": "list.focusDown",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "alt+i",
		"command": "list.focusUp",
		"when": "listFocus && !inputFocus"
	},
	{
		"key": "alt+k",
		"command": "workbench.banner.focusNextAction",
		"when": "bannerFocused"
	},
	{
		"key": "alt+i",
		"command": "workbench.banner.focusPreviousAction",
		"when": "bannerFocused"
	},
	{
		"key": "capsLock",
		"command": "extension.vim_escape",
		"when": "editorTextFocus && vim.active && !inDebugRepl"
	},
	{
		"key": "ctrl+enter",
		"command": "r.runSelection",
		"when": "editorTextFocus && editorLangId == 'r'"
	},
	{
		"key": "ctrl+shift+/",
		"command": "github.copilot.acceptCursorPanelSolution",
		"when": "github.copilot.activated && github.copilot.panelVisible"
	},
	{
		"key": "ctrl+alt+enter",
		"command": "github.copilot.generate",
		"when": "editorTextFocus && github.copilot.activated && !inInteractiveInput && !interactiveEditorFocused"
	},
	{
		"key": "ctrl+enter",
		"command": "editor.action.insertLineAfter",
		"when": "editorTextFocus && !editorReadonly"
	},
]
